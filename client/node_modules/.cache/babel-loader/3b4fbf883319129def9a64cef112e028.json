{"ast":null,"code":"var _jsxFileName = \"/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/Subscriber.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Subscriber(props) {\n  const userTo = props.userTo;\n  const userFrom = props.userFrom;\n  const [SubscribeNumber, setSubscribeNumber] = useState(0);\n  const [Subscribed, setSubscribed] = useState(false);\n\n  const onSubscribe = () => {\n    let subscribeVariabels = {\n      userTo: userTo,\n      userFrom: userFrom\n    };\n\n    if (Subscribed) {\n      axios.post('/api/subscribe/unSubsribe', subscribeVariabels).then(response => {\n        if (response.data.success) {\n          setSubscribeNumber(SubscribeNumber - 1);\n          setSubscribed(!Subscribed);\n        } else {\n          alert('Failed to unsubscribe');\n        }\n      });\n    } else {\n      axios.post('/api/subscribe/subscribe', subscribeVariabels).then(response => {\n        if (response.data.success) {\n          setSubscribeNumber(SubscribeNumber + 1);\n          setSubscribed(!Subscribed);\n        } else {\n          alert('Failed to subscribe');\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    const subscribeNumberVariables = {\n      userTo: userTo,\n      userFrom: userFrom\n    };\n    axios.post('/api/subscribe/subscribeNumber', subscribeNumberVariables).then(response => {\n      if (response.data.success) {\n        setSubscribeNumber(response.data.subscribeNumber);\n      } else {\n        alert('Failed to get subscriber number');\n      }\n    });\n    axios.post('/api/subscribe/subscribed', subscribeNumberVariables).then(response => {\n      if (response.data.success) {\n        setSubscribed(response.data.subscribed);\n      } else {\n        alert('Failed to get Subscribed Informations');\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSubscribe,\n    style: {\n      backgroundColor: `${Subscribed ? '#AAAAAA' : '#CC0000'}`,\n      borderRadius: '4px',\n      color: 'white',\n      padding: '10px 16px',\n      fontWeight: '500',\n      fontSize: '1rem',\n      textTransform: 'uppercase'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, SubscribeNumber, \" \", Subscribed ? 'Subscribed' : 'Subscribe'));\n}\n\nexport default Subscriber;","map":{"version":3,"sources":["/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/Subscriber.js"],"names":["React","useEffect","useState","axios","Subscriber","props","userTo","userFrom","SubscribeNumber","setSubscribeNumber","Subscribed","setSubscribed","onSubscribe","subscribeVariabels","post","then","response","data","success","alert","subscribeNumberVariables","subscribeNumber","subscribed","backgroundColor","borderRadius","color","padding","fontWeight","fontSize","textTransform"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nfunction Subscriber(props){\n    const userTo = props.userTo\n    const userFrom = props.userFrom\n\n    const [SubscribeNumber, setSubscribeNumber] = useState(0)\n    const [Subscribed, setSubscribed] = useState(false)\n\n    const onSubscribe = () => {\n\n        let subscribeVariabels = {\n            userTo: userTo,\n            userFrom: userFrom\n        }\n\n        if(Subscribed){\n\n            axios.post('/api/subscribe/unSubsribe', subscribeVariabels)\n                .then(response => {\n                    if(response.data.success){\n                        setSubscribeNumber(SubscribeNumber - 1)\n                        setSubscribed(!Subscribed)\n                    }else{\n                        alert('Failed to unsubscribe')\n                    }\n                })\n\n        }else{\n            axios.post('/api/subscribe/subscribe', subscribeVariabels)\n            .then(response => {\n                if(response.data.success){\n                    setSubscribeNumber(SubscribeNumber + 1)\n                    setSubscribed(!Subscribed)\n                }else{\n                    alert('Failed to subscribe')\n                }\n            })            \n        }\n\n    }\n\n    useEffect(() => {\n        const subscribeNumberVariables = { userTo: userTo, userFrom: userFrom}\n        axios.post('/api/subscribe/subscribeNumber', subscribeNumberVariables)\n        .then(response => {\n            if(response.data.success){\n                setSubscribeNumber(response.data.subscribeNumber)\n            }else{\n                alert('Failed to get subscriber number')\n            }\n        })\n\n        axios.post('/api/subscribe/subscribed', subscribeNumberVariables)\n        .then(response => {\n            if(response.data.success){\n                setSubscribed(response.data.subscribed)\n            }else{\n                alert('Failed to get Subscribed Informations')\n            }\n        })\n        \n    },[])\n\n\n    return (\n        <div>\n            <button \n            onClick={onSubscribe}\n            style={{\n                backgroundColor: `${Subscribed ? '#AAAAAA' : '#CC0000'}`,\n                borderRadius: '4px', color: 'white',\n                padding: '10px 16px', fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase'\n            }}>\n                {SubscribeNumber} {Subscribed ? 'Subscribed' : 'Subscribe'}\n            </button>\n        </div>\n    )\n}\n\nexport default Subscriber"]},"metadata":{},"sourceType":"module"}