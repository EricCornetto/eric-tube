{"ast":null,"code":"var _jsxFileName = \"/home/eric/Project/Exam/happy-tube/client/src/components/views/UploadVideoPage/UploadVideoPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, message, Input, Icon } from 'antd';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport { userSelector, useSelector } from \"react-redux\";\nimport { duration } from 'moment';\nimport { TextField, Typography, Container, Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    }\n  }\n}));\nconst Private = [{\n  value: 0,\n  label: 'Private'\n}, {\n  value: 1,\n  label: 'Public'\n}];\nconst Category = [{\n  value: 0,\n  label: \"Film & Animation\"\n}, {\n  value: 0,\n  label: \"Autos & Vehicles\"\n}, {\n  value: 0,\n  label: \"Music\"\n}, {\n  value: 0,\n  label: \"Pets & Animals\"\n}, {\n  value: 0,\n  label: \"Sports\"\n}];\n\nfunction UploadVideoPage() {\n  const user = useSelector(state => state.user);\n  const [title, setTitle] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const [privacy, setPrivacy] = useState(0);\n  const [Categories, setCategories] = useState(\"Film & Animation\");\n  const [FilePath, setFilePath] = useState(\"\");\n  const [Duration, setDuration] = useState(\"\");\n  const [Thumbnail, setThumbnail] = useState(\"\");\n\n  const handleChangeTitle = event => {\n    console.log(event.currentTarget.value);\n    setTitle(event.currentTarget.value);\n  };\n\n  const handleChangeDecsription = event => {\n    console.log(event.currentTarget.value);\n    setDescription(event.currentTarget.value);\n  };\n\n  const handleChangeOne = event => {\n    console.log(event.currentTarget.value);\n    setPrivacy(event.currentTarget.value);\n  };\n\n  const handleChangeTwo = event => {\n    console.log(event.currentTarget.value);\n    setCategories(event.currentTarget.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (user.userData && !user.userData.isAuth) {\n      return alert('Please Login First');\n    }\n\n    if (title === \"\" || Description === \"\" || Categories === \"\" || FilePath === \"\" || Duration === \"\" || Thumbnail === \"\") {\n      return alert('Please fill all of the fields');\n    }\n\n    const variables = {\n      writer: user.userData._id,\n      title: title,\n      description: Description,\n      privacy: privacy,\n      filePath: FilePath,\n      category: Categories,\n      duration: Duration,\n      thumbnail: Thumbnail\n    };\n    axios.post('/api/video/uploadVideo', variables).then(response => {\n      if (response.data.success) {\n        alert('video uploaded successfully');\n      } else {\n        alert('Failed to upload video');\n      }\n    });\n  };\n\n  const onDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    console.log(files);\n    formData.append(\"file\", files[0]);\n    axios.post('/api/video/uploadfiles', formData, config).then(response => {\n      if (response.data.success) {\n        let variable = {\n          filePath: response.data.filePath,\n          fileName: response.data.fileName\n        };\n        setFilePath(response.data.filePath); // generate thumbnail\n\n        axios.post('/api/video/thumbnail', variable).then(response => {\n          if (response.data.success) {\n            setDuration(response.data.fileDuration);\n            setThumbnail(response.data.thumbsFilePath);\n          } else {\n            alert('Failed to make the thumbnails');\n          }\n        });\n      } else {\n        alert('failed to save the video in server');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: '2rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \" Upload Video\")), /*#__PURE__*/React.createElement(Form, {\n    className: useStyles().root,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: useStyles().paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: onDrop,\n    multiple: false,\n    maxSize: 800000000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      width: '600px',\n      height: '240px',\n      border: '1px solid lightgray',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Icon, {\n    type: \"plus\",\n    style: {\n      fontSize: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Paper, {\n    className: useStyles().paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, Thumbnail !== \"\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://localhost:5000/${Thumbnail}`,\n    alt: \"haha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 37\n    }\n  })))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Title\",\n    onChange: handleChangeTitle,\n    value: title,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    label: \"Description\",\n    onChange: handleChangeDecsription,\n    value: Description,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChangeOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, Private.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, item.label))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChangeTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, Category.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, item.label))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"large\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n}\n\nexport default UploadVideoPage;","map":{"version":3,"sources":["/home/eric/Project/Exam/happy-tube/client/src/components/views/UploadVideoPage/UploadVideoPage.js"],"names":["React","useState","useEffect","Button","Form","message","Input","Icon","Dropzone","axios","userSelector","useSelector","duration","TextField","Typography","Container","Grid","Paper","makeStyles","useStyles","theme","root","margin","spacing","width","flexGrow","paper","padding","textAlign","color","palette","text","secondary","Private","value","label","Category","UploadVideoPage","user","state","title","setTitle","Description","setDescription","privacy","setPrivacy","Categories","setCategories","FilePath","setFilePath","Duration","setDuration","Thumbnail","setThumbnail","handleChangeTitle","event","console","log","currentTarget","handleChangeDecsription","handleChangeOne","handleChangeTwo","onSubmit","preventDefault","userData","isAuth","alert","variables","writer","_id","description","filePath","category","thumbnail","post","then","response","data","success","onDrop","files","formData","FormData","config","header","append","variable","fileName","fileDuration","thumbsFilePath","maxWidth","marginBottom","display","justifyContent","getRootProps","getInputProps","height","border","alignItems","fontSize","map","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {  Button, Form, message, Input, Icon } from 'antd'\nimport Dropzone from 'react-dropzone'\nimport axios from 'axios'\nimport { userSelector, useSelector } from \"react-redux\"\nimport { duration } from 'moment'\nimport { TextField, Typography, Container, Grid, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        flexGrow: 1,\n      },\n      paper: {\n          padding: theme.spacing(2),\n          textAlign: 'center',\n          color: theme.palette.text.secondary,\n      }\n    },\n  }));\n\n\n\nconst Private = [\n    {value:0, label:'Private'},\n    {value:1, label:'Public'}\n]\n\nconst Category = [\n    {value:0, label: \"Film & Animation\"},\n    {value:0, label: \"Autos & Vehicles\"},\n    {value:0, label: \"Music\"},\n    {value:0, label: \"Pets & Animals\"},\n    {value:0, label: \"Sports\"},\n]\n\nfunction UploadVideoPage(){\n    const user = useSelector(state => state.user)\n\n    const [title, setTitle] = useState(\"\")\n    const [Description, setDescription] = useState(\"\")\n    const [privacy, setPrivacy] = useState(0)\n    const [Categories, setCategories] = useState(\"Film & Animation\")\n    const [FilePath, setFilePath] = useState(\"\")\n    const [Duration, setDuration] = useState(\"\")\n    const [Thumbnail, setThumbnail] = useState(\"\")\n\n    const handleChangeTitle = (event) => {\n        console.log(event.currentTarget.value)\n        setTitle(event.currentTarget.value)\n    }\n\n    const handleChangeDecsription = (event) => {\n        console.log(event.currentTarget.value)\n        setDescription(event.currentTarget.value)\n    }\n\n    const handleChangeOne = (event) => {\n        console.log(event.currentTarget.value)\n        setPrivacy(event.currentTarget.value)\n    }\n\n    const handleChangeTwo = (event) => {\n        console.log(event.currentTarget.value)\n        setCategories(event.currentTarget.value)\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        if(user.userData && !user.userData.isAuth){\n            return alert('Please Login First')\n        }\n\n        if(title === \"\" || Description === \"\" || Categories === \"\" || FilePath === \"\" || Duration === \"\" || Thumbnail === \"\" ){\n            return alert('Please fill all of the fields')\n        }\n\n        const variables = {\n            writer: user.userData._id,\n            title: title,\n            description: Description,\n            privacy: privacy,\n            filePath: FilePath,\n            category: Categories,\n            duration: Duration,\n            thumbnail: Thumbnail\n        }\n\n        axios.post('/api/video/uploadVideo', variables)\n            .then(response => {\n                if(response.data.success){\n                    alert('video uploaded successfully')\n\n                }else{\n                    alert('Failed to upload video')\n                }\n            })\n\n    }\n\n    const onDrop = (files) => {\n        let formData = new FormData();\n        const config = {\n            header: {'content-type': 'multipart/form-data'}\n        }\n        console.log(files)\n        formData.append(\"file\",files[0])\n\n        axios.post('/api/video/uploadfiles', formData, config)\n            .then(response =>{\n                if(response.data.success){\n\n                    let variable = {\n                        filePath: response.data.filePath,\n                        fileName: response.data.fileName\n                    }\n\n                    setFilePath(response.data.filePath)\n\n                    // generate thumbnail\n\n                    axios.post('/api/video/thumbnail',variable)\n                        .then(response => {\n                            if(response.data.success){\n                                setDuration(response.data.fileDuration)\n                                setThumbnail(response.data.thumbsFilePath)\n\n                            }else{\n                                alert('Failed to make the thumbnails')\n                            }\n                        })\n\n                }else{\n                    alert('failed to save the video in server')\n                }\n            })\n    }\n    \n    return (\n        <Container maxWidth=\"sm\">\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n        <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n            <Typography level={2} > Upload Video</Typography>\n        </div>\n\n        <Form className={useStyles().root} onSubmit={onSubmit}>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Grid container spacing={3}>\n                    <Grid item >\n                        <Paper className={useStyles().paper}>\n                        <Dropzone\n                                onDrop={onDrop}\n                                multiple={false}\n                                maxSize={800000000}>\n                                {({ getRootProps, getInputProps }) => (\n                                    <div style={{ width: '600px', height: '240px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                                        {...getRootProps()}\n                                    >\n                                        <input {...getInputProps()} />\n                                        <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\n\n                                    </div>\n                                )}\n                            </Dropzone>\n                        </Paper>\n                        <Paper className={useStyles().paper}>\n                        {Thumbnail !== \"\" &&\n                                <div>\n                                    <img src={`http://localhost:5000/${Thumbnail}`} alt=\"haha\" />\n                                </div>\n                            }\n                        </Paper>\n                    </Grid>\n                </Grid>\n                \n            </div>\n\n            <br /><br />\n            <TextField\n                \n                label=\"Title\"\n                onChange={handleChangeTitle}\n                value={title}\n                variant=\"outlined\"\n            />\n            <br /><br />\n            <TextField\n                multiline\n                label=\"Description\"\n                onChange={handleChangeDecsription}\n                value={Description}\n                variant=\"outlined\"\n            />\n            <br /><br />\n\n            <select onChange={handleChangeOne}>\n                {Private.map((item, index) => (\n                    <option key={index} value={item.value}>{item.label}</option>\n                ))}\n            </select>\n            <br /><br />\n\n            <select onChange={handleChangeTwo}>\n                {Category.map((item, index) => (\n                    <option key={index} value={item.label}>{item.label}</option>\n                ))}\n            </select>\n            <br /><br />\n\n            <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                Submit\n        </Button>\n\n        </Form>\n    </div>\n    </Container>\n    )\n}\n\nexport default UploadVideoPage"]},"metadata":{},"sourceType":"module"}