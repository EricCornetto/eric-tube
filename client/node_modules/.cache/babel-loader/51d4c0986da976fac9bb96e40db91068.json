{"ast":null,"code":"var _jsxFileName = \"/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/DetailVideoPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { List, Avatar, Row, Col } from 'antd';\nimport axios from 'axios';\nimport SideVideo from './Sections/SideVideo';\nimport Subscriber from './Sections/Subscriber';\nimport Comments from './Sections/Comments';\nimport LikeDislikes from './Sections/LikeDislikes';\n\nfunction DetailVideoPage(props) {\n  const videoId = props.match.params.videoId;\n  const [Video, setVideo] = useState([]);\n  const [CommentLists, setCommentLists] = useState([]);\n  const videoVariable = {\n    videoId: videoId\n  };\n  useEffect(() => {\n    axios.post('/api/video/getVideo', videoVariable).then(response => {\n      if (response.data.success) {\n        console.log(response.data.video);\n        setVideo(response.data.video);\n      } else {\n        alert('Failed to get video Info');\n      }\n    });\n    axios.post('/api/comment/getComments', videoVariable).then(response => {\n      if (response.data.success) {\n        setCommentLists(response.data.comments);\n      } else {\n        alert('Failed to get video Info');\n      }\n    });\n  }, []);\n\n  const updateComment = newComment => {\n    setCommentLists(CommentLists.concat(newComment));\n  };\n\n  if (Video.writer) {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 18,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postPage\",\n      style: {\n        width: '100%',\n        padding: '3rem 4em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      style: {\n        width: '100%'\n      },\n      src: `http://localhost:5000/${Video.filePath}`,\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(List.Item, {\n      actions: [/*#__PURE__*/React.createElement(LikeDislikes, {\n        video: true,\n        videoId: videoId,\n        userId: localStorage.getItem('userId'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 38\n        }\n      }), /*#__PURE__*/React.createElement(Subscriber, {\n        userTo: Video.writer._id,\n        userFrom: localStorage.getItem('userId'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: Video.writer && Video.writer.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 46\n        }\n      }),\n      title: /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 32\n        }\n      }, Video.title),\n      description: Video.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Comments, {\n      CommentLists: CommentLists,\n      postId: Video._id,\n      refreshFunction: updateComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SideVideo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Loading...\");\n  }\n}\n\nexport default DetailVideoPage;","map":{"version":3,"sources":["/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/DetailVideoPage.js"],"names":["React","useEffect","useState","List","Avatar","Row","Col","axios","SideVideo","Subscriber","Comments","LikeDislikes","DetailVideoPage","props","videoId","match","params","Video","setVideo","CommentLists","setCommentLists","videoVariable","post","then","response","data","success","console","log","video","alert","comments","updateComment","newComment","concat","writer","width","padding","filePath","localStorage","getItem","_id","image","title","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { List, Avatar, Row, Col } from 'antd';\nimport axios from 'axios';\nimport SideVideo from './Sections/SideVideo'\nimport Subscriber from './Sections/Subscriber'\nimport Comments from './Sections/Comments'\nimport LikeDislikes from './Sections/LikeDislikes'\n\nfunction DetailVideoPage(props){\n\n    const videoId = props.match.params.videoId\n    const [Video, setVideo] = useState([])\n    const [CommentLists, setCommentLists] = useState([])\n\n    const videoVariable = {\n        videoId: videoId\n    }\n\n    useEffect(() => {\n        axios.post('/api/video/getVideo', videoVariable)\n        .then(response => {\n            if(response.data.success){\n                console.log(response.data.video)\n                setVideo(response.data.video)\n            }else{\n                alert('Failed to get video Info')\n            }\n        })\n\n        axios.post('/api/comment/getComments', videoVariable)\n        .then(response => {\n            if(response.data.success){\n                setCommentLists(response.data.comments)\n            }else{\n                alert('Failed to get video Info')\n            }\n        })\n    }, [])\n\n    const updateComment = (newComment) => {\n        setCommentLists(CommentLists.concat(newComment))\n    }\n\n    if(Video.writer){\n        return(\n            <Row>\n                <Col lg={18} xs={24}>\n            <div className=\"postPage\" style={{ width: '100%', padding: '3rem 4em'}}>\n                <video style={{ width: '100%'}} src={`http://localhost:5000/${Video.filePath}`} controls></video>\n    \n                <List.Item actions={[<LikeDislikes video videoId={videoId} userId={localStorage.getItem('userId')} />,\n            <Subscriber userTo={Video.writer._id} userFrom={localStorage.getItem('userId')} />]}>\n                    <List.Item.Meta avatar={ <Avatar src={Video.writer && Video.writer.image} /> }\n                        title={<a href=\"/\">{Video.title}</a>}\n                        description={Video.description}\n                    />\n                <div></div>\n                </List.Item>\n\n                <Comments CommentLists={CommentLists} postId={Video._id} refreshFunction={updateComment} />\n    \n            </div>  \n                </Col>\n                <Col lg={6} xs={24}>\n                    <SideVideo />\n                \n                </Col>\n            </Row>      \n        )\n    }else{\n        return (\n            <div>Loading...</div>\n        )\n    }\n    \n}\n\nexport default DetailVideoPage"]},"metadata":{},"sourceType":"module"}