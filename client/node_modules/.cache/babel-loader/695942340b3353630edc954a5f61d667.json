{"ast":null,"code":"var _jsxFileName = \"/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/Subscriber.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { response } from 'express';\n\nfunction Subscriber(props) {\n  const userTo = props.userTo;\n  const userFrom = props.userFrom;\n  const [SubscribeNumber, setSubscribeNumber] = useState(0);\n  const [Subscribed, setSubscribed] = useState(false);\n  useEffect(() => {\n    const subscribeNumberVariables = {\n      userTo: userTo,\n      userFrom: userFrom\n    };\n    axios.post('/api/subscribe/subscribeNumber', subscribeNumberVariables).then(response => {\n      if (response.data.success) {\n        setSubscribeNumber(response.data.subscribeNumber);\n      } else {\n        alert('Failed to get subscriber number');\n      }\n    });\n    axios.post('/api/subscribe/subscribed', subscribeNumberVariables).then(response => {\n      if (response.data.success) {\n        console.log(response.data.subscribed);\n      } else {\n        alert('Failed to get Subscribed Informations');\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      backgroundColor: `${Subscribed ? '#AAAAA' : '#CC0000'}`,\n      borderRadius: '4px',\n      color: 'white',\n      'padding': '10px 16px',\n      fontWeight: '500',\n      fontSize: '1rem',\n      textTransform: 'uppercase'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, SubscribeNumber, \" \", Subscribed ? 'Subscribed' : 'Subscribe', \" Subscribe\"));\n}\n\nexport default Subscriber;","map":{"version":3,"sources":["/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/Subscriber.js"],"names":["React","useEffect","useState","axios","response","Subscriber","props","userTo","userFrom","SubscribeNumber","setSubscribeNumber","Subscribed","setSubscribed","subscribeNumberVariables","post","then","data","success","subscribeNumber","alert","console","log","subscribed","backgroundColor","borderRadius","color","fontWeight","fontSize","textTransform"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AACtB,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMC,QAAQ,GAAGF,KAAK,CAACE,QAAvB;AAEA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,wBAAwB,GAAG;AAAEN,MAAAA,MAAM,EAAEA,MAAV;AAAkBC,MAAAA,QAAQ,EAAEA;AAA5B,KAAjC;AACAL,IAAAA,KAAK,CAACW,IAAN,CAAW,gCAAX,EAA6CD,wBAA7C,EACCE,IADD,CACMX,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACY,IAAT,CAAcC,OAAjB,EAAyB;AACrBP,QAAAA,kBAAkB,CAACN,QAAQ,CAACY,IAAT,CAAcE,eAAf,CAAlB;AACH,OAFD,MAEK;AACDC,QAAAA,KAAK,CAAC,iCAAD,CAAL;AACH;AACJ,KAPD;AASAhB,IAAAA,KAAK,CAACW,IAAN,CAAW,2BAAX,EAAwCD,wBAAxC,EACCE,IADD,CACMX,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACY,IAAT,CAAcC,OAAjB,EAAyB;AACrBG,QAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACY,IAAT,CAAcM,UAA1B;AACH,OAFD,MAEK;AACDH,QAAAA,KAAK,CAAC,uCAAD,CAAL;AACH;AACJ,KAPD;AASH,GApBQ,EAoBP,EApBO,CAAT;AAuBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAE;AAAEI,MAAAA,eAAe,EAAG,GAAEZ,UAAU,GAAG,QAAH,GAAc,SAAU,EAAxD;AAA2Da,MAAAA,YAAY,EAAE,KAAzE;AAAgFC,MAAAA,KAAK,EAAE,OAAvF;AAAgG,iBAAW,WAA3G;AACdC,MAAAA,UAAU,EAAE,KADE;AACKC,MAAAA,QAAQ,EAAE,MADf;AACuBC,MAAAA,aAAa,EAAC;AADrC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKnB,eAFL,OAEuBE,UAAU,GAAE,YAAF,GAC7B,WAHJ,eADJ,CADJ;AASH;;AAED,eAAeN,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { response } from 'express'\n\nfunction Subscriber(props){\n    const userTo = props.userTo\n    const userFrom = props.userFrom\n\n    const [SubscribeNumber, setSubscribeNumber] = useState(0)\n    const [Subscribed, setSubscribed] = useState(false)\n    useEffect(() => {\n        const subscribeNumberVariables = { userTo: userTo, userFrom: userFrom}\n        axios.post('/api/subscribe/subscribeNumber', subscribeNumberVariables)\n        .then(response => {\n            if(response.data.success){\n                setSubscribeNumber(response.data.subscribeNumber)\n            }else{\n                alert('Failed to get subscriber number')\n            }\n        })\n\n        axios.post('/api/subscribe/subscribed', subscribeNumberVariables)\n        .then(response => {\n            if(response.data.success){\n                console.log(response.data.subscribed)\n            }else{\n                alert('Failed to get Subscribed Informations')\n            }\n        })\n        \n    },[])\n\n\n    return (\n        <div>\n            <button style={{ backgroundColor: `${Subscribed ? '#AAAAA' : '#CC0000'}`, borderRadius: '4px', color: 'white', 'padding': '10px 16px',\n             fontWeight: '500', fontSize: '1rem', textTransform:'uppercase'}}>\n                {SubscribeNumber} {Subscribed? 'Subscribed':\n                'Subscribe'} Subscribe\n            </button>\n        </div>\n    )\n}\n\nexport default Subscriber"]},"metadata":{},"sourceType":"module"}