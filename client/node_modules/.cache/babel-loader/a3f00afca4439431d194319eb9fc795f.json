{"ast":null,"code":"var _jsxFileName = \"/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/ReplyComment.js\";\nimport React from 'react';\nimport SingleComment from './SingleComment';\nimport { useEffect } from 'react';\n\nfunction ReplyComment(props) {\n  useEffect(() => {\n    let commentNumber = 0;\n    props.CommentLists;\n  });\n\n  let renderReplyComment = parentCommentId => {\n    props.CommentLists && props.CommentLists.map((comment, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, comment.responseTo === parentCommentId, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '50px',\n        width: '80%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SingleComment, {\n      comment: comment,\n      postId: props.postId,\n      refreshFunction: props.refreshFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ReplyComment, {\n      CommentLists: props.CommentLists,\n      postId: props.postId,\n      parentCommentId: comment._id,\n      refreshFunction: props.refreshFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: '14px',\n      margin: 0,\n      color: 'gray'\n    },\n    onClick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"View more comment(s)\"), renderReplyComment(props.parentCommentId));\n}\n\nexport default ReplyComment;","map":{"version":3,"sources":["/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/ReplyComment.js"],"names":["React","SingleComment","useEffect","ReplyComment","props","commentNumber","CommentLists","renderReplyComment","parentCommentId","map","comment","index","responseTo","marginLeft","width","postId","refreshFunction","_id","fontSize","margin","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAExBF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,aAAa,GAAG,CAApB;AACAD,IAAAA,KAAK,CAACE,YAAN;AACH,GAHQ,CAAT;;AAKA,MAAIC,kBAAkB,GAAIC,eAAD,IAAqB;AAC1CJ,IAAAA,KAAK,CAACE,YAAN,IAAsBF,KAAK,CAACE,YAAN,CAAmBG,GAAnB,CAAuB,CAACC,OAAD,EAASC,KAAT,kBAEzC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,OAAO,CAACE,UAAR,KAAuBJ,eAD5B,eAEI;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,UAAU,EAAC,MAAb;AAAqBC,QAAAA,KAAK,EAAC;AAA3B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEJ,OAAxB;AAAiC,MAAA,MAAM,EAAEN,KAAK,CAACW,MAA/C;AAAuD,MAAA,eAAe,EAAEX,KAAK,CAACY,eAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,eAEJ,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAEZ,KAAK,CAACE,YAAlC;AAAgD,MAAA,MAAM,EAAEF,KAAK,CAACW,MAA9D;AAAsE,MAAA,eAAe,EAAEL,OAAO,CAACO,GAA/F;AAAoG,MAAA,eAAe,EAAEb,KAAK,CAACY,eAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CAFJ,CAFkB,CAAtB;AAYH,GAbD;;AAeA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAC,MAAX;AAAmBC,MAAAA,MAAM,EAAC,CAA1B;AAA6BC,MAAAA,KAAK,EAAC;AAAnC,KAAV;AAAsD,IAAA,OAAO,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAKIb,kBAAkB,CAACH,KAAK,CAACI,eAAP,CALtB,CADJ;AAUH;;AAED,eAAeL,YAAf","sourcesContent":["import React from 'react'\nimport SingleComment from './SingleComment'\nimport { useEffect } from 'react'\n\nfunction ReplyComment(props){\n\n    useEffect(() => {\n        let commentNumber = 0\n        props.CommentLists\n    })\n\n    let renderReplyComment = (parentCommentId) => {\n        props.CommentLists && props.CommentLists.map((comment,index) => (\n\n            <React.Fragment>\n                {comment.responseTo === parentCommentId}\n                <div style={{ marginLeft:'50px', width:'80%'}}>\n            <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\n            <ReplyComment CommentLists={props.CommentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\n                </div>\n            </React.Fragment>\n            \n            )\n        )\n    }\n\n    return(\n        <div>\n            <p style={{ fontSize:'14px', margin:0, color:'gray'}} onClick>\n                View more comment(s)\n            </p>\n\n           {renderReplyComment(props.parentCommentId)}\n\n        </div>\n    )\n}\n\nexport default ReplyComment"]},"metadata":{},"sourceType":"module"}