{"ast":null,"code":"var _jsxFileName = \"/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/SingleComment.js\";\nimport React, { useState } from 'react';\nimport { Comment, Avatar, Button, Input } from 'antd';\nimport { OmitProps } from 'antd/lib/transfer/renderListBody';\nimport axios from 'axios';\nconst {\n  TextArea\n} = Input;\n\nfunction SingleComment(props) {\n  const [CommentValue, setCommentValue] = useState(\"\");\n  const [OpenReply, setOpenReply] = useState(false);\n\n  const handleChange = event => {\n    setCommentValue(event.currentTarget.value);\n  };\n\n  const openReply = () => {\n    setOpenReply(!OpenReply);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    axios.post('/api/comment/saveComment', variables);\n  };\n\n  const actions = [/*#__PURE__*/React.createElement(\"span\", {\n    onClick: openReply,\n    key: \"comment-basic-reply-to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Reply to\")];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Comment, {\n    actions: actions,\n    author: props.comment.writer.name,\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: props.comment.writer.image,\n      alt: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, props.comment.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      display: 'flex'\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    style: {\n      width: '100%',\n      borderRadius: '5px'\n    },\n    onChange: handleChange,\n    value: CommentValue,\n    placeholder: \"write some comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: '20%',\n      height: '52px'\n    },\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Submit\")));\n}\n\nexport default SingleComment;","map":{"version":3,"sources":["/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/SingleComment.js"],"names":["React","useState","Comment","Avatar","Button","Input","OmitProps","axios","TextArea","SingleComment","props","CommentValue","setCommentValue","OpenReply","setOpenReply","handleChange","event","currentTarget","value","openReply","onSubmit","preventDefault","post","variables","actions","comment","writer","name","image","content","display","width","borderRadius","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,KAAlC,QAA8C,MAA9C;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeH,KAArB;;AAIA,SAASI,aAAT,CAAuBC,KAAvB,EAA6B;AAEzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMc,YAAY,GAAIC,KAAD,IAAW;AAC5BJ,IAAAA,eAAe,CAACI,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAf;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACpBL,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,QAAMO,QAAQ,GAAIJ,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACK,cAAN;AACAd,IAAAA,KAAK,CAACe,IAAN,CAAW,0BAAX,EAAuCC,SAAvC;AACH,GAHD;;AAKA,QAAMC,OAAO,GAAG,cACZ;AAAM,IAAA,OAAO,EAAEL,SAAf;AAA0B,IAAA,GAAG,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADY,CAAhB;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,OAAO,EAAEK,OADb;AAEI,IAAA,MAAM,EAAEd,KAAK,CAACe,OAAN,CAAcC,MAAd,CAAqBC,IAFjC;AAGI,IAAA,MAAM,eACF,oBAAC,MAAD;AACA,MAAA,GAAG,EAAEjB,KAAK,CAACe,OAAN,CAAcC,MAAd,CAAqBE,KAD1B;AAEA,MAAA,GAAG,MAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AASI,IAAA,OAAO,eACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKlB,KAAK,CAACe,OAAN,CAAcI,OADnB,CAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAiBQ;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAC;AAAV,KAAb;AAAgC,IAAA,QAAQ,EAAEV,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,YAAY,EAAE;AAA/B,KADX;AAEI,IAAA,QAAQ,EAAEjB,YAFd;AAGI,IAAA,KAAK,EAAEJ,YAHX;AAII,IAAA,WAAW,EAAE,qBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEoB,MAAAA,KAAK,EAAE,KAAT;AAAgBE,MAAAA,MAAM,EAAE;AAAxB,KAAf;AAAgD,IAAA,OAAO,EAAEb,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CAjBR,CADJ;AA+BH;;AAED,eAAeX,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Comment, Avatar, Button, Input} from 'antd'\nimport { OmitProps } from 'antd/lib/transfer/renderListBody'\nimport axios from 'axios'\nconst { TextArea } = Input\n\n\n\nfunction SingleComment(props){\n\n    const [CommentValue, setCommentValue] = useState(\"\")\n    const [OpenReply, setOpenReply] = useState(false)\n\n    const handleChange = (event) => {\n        setCommentValue(event.currentTarget.value)\n    }\n\n    const openReply = () => {\n        setOpenReply(!OpenReply)\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        axios.post('/api/comment/saveComment', variables)\n    }\n\n    const actions = [\n        <span onClick={openReply} key=\"comment-basic-reply-to\">Reply to</span>\n    ]\n\n    return(\n        <div>\n            <Comment \n                actions={actions}\n                author={props.comment.writer.name}\n                avatar={\n                    <Avatar \n                    src={props.comment.writer.image}\n                    alt\n                    />\n                }\n                content={\n                    <p>\n                        {props.comment.content}\n                    </p>\n                }\n                ></Comment>\n\n                <form style={{ display:'flex'}} onSubmit={onSubmit}>\n                    \n                    <TextArea\n                        style={{ width: '100%', borderRadius: '5px'}}\n                        onChange={handleChange}\n                        value={CommentValue}\n                        placeholder= \"write some comments\"\n                    />\n                    <br />\n                    <Button style={{ width: '20%', height: '52px'}} onClick={onSubmit}>Submit</Button>\n                </form> \n        </div>\n    )\n}\n\nexport default SingleComment"]},"metadata":{},"sourceType":"module"}