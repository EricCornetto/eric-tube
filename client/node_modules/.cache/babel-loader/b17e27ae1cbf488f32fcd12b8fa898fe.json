{"ast":null,"code":"var _jsxFileName = \"/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/Comments.js\";\nimport React, { useState } from 'react';\nimport { Button, Input } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\nconst {\n  TextArea\n} = Input;\n\nfunction Comments(props) {\n  const user = useSelector(state => state.user);\n  const [Comment, setComment] = useState(\"\");\n\n  const handleChange = e => {\n    setComment(e.currentTarget.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const variables = {\n      content: Comment,\n      writer: user.userData._id,\n      postId: props.postId\n    };\n    axios.post('/api/comment/saveComment', variables).then(response => {\n      if (response.data.success) {\n        setComment(\"\");\n        props.refreshFunction(response.data.result);\n      } else {\n        alert('Failed to save Comment');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \" replies\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), console.log(props.CommentLists), props.CommentLists && props.CommentLists.map((comment, index) => !comment.responseTo && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SingleComment, {\n    comment: comment,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ReplyComment, {\n    CommentLists: props.CommentLists,\n    postId: props.postId,\n    parentCommentId: comment._id,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      display: 'flex'\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    style: {\n      width: '100%',\n      borderRadius: '5px'\n    },\n    onChange: handleChange,\n    value: Comment,\n    placeholder: \"write some comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: '20%',\n      height: '52px'\n    },\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n}\n\nexport default Comments;","map":{"version":3,"sources":["/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/Comments.js"],"names":["React","useState","Button","Input","axios","useSelector","SingleComment","ReplyComment","TextArea","Comments","props","user","state","Comment","setComment","handleChange","e","currentTarget","value","onSubmit","preventDefault","variables","content","writer","userData","_id","postId","post","then","response","data","success","refreshFunction","result","alert","console","log","CommentLists","map","comment","index","responseTo","display","width","borderRadius","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Input } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\nconst { TextArea } = Input;\n\nfunction Comments(props) {\n    const user = useSelector(state => state.user)\n    const [Comment, setComment] = useState(\"\")\n\n    const handleChange = (e) => {\n        setComment(e.currentTarget.value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const variables = {\n            content: Comment,\n            writer: user.userData._id,\n            postId: props.postId\n        }\n\n        axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setComment(\"\")\n                    props.refreshFunction(response.data.result)\n                } else {\n                    alert('Failed to save Comment')\n                }\n            })\n    }\n\n    return (\n        <div>\n            <br />\n            <p> replies</p>\n            <hr />\n            {/* Comment Lists  */}\n            {console.log(props.CommentLists)}\n\n            {props.CommentLists && props.CommentLists.map((comment, index) => (\n                (!comment.responseTo &&\n                    <React.Fragment>\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\n                        <ReplyComment CommentLists={props.CommentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\n                    </React.Fragment>\n                )\n            ))}\n\n\n\n            {/* Root Comment Form */}\n            <form style={{ display: 'flex' }} onSubmit={onSubmit}>\n                <TextArea\n                    style={{ width: '100%', borderRadius: '5px' }}\n                    onChange={handleChange}\n                    value={Comment}\n                    placeholder=\"write some comments\"\n                />\n                <br />\n                <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</Button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default Comments\n"]},"metadata":{},"sourceType":"module"}