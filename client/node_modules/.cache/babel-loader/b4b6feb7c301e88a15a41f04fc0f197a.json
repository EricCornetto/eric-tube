{"ast":null,"code":"var _jsxFileName = \"/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/SingleComment.js\";\nimport React, { useState } from 'react';\nimport { Comment, Avatar, Button, Input } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport LikeDislike from './LikeDislikes';\nconst {\n  TextArea\n} = Input;\n\nfunction SingleComment(props) {\n  const user = useSelector(state => state.user);\n  const [CommentValue, setCommentValue] = useState(\"\");\n  const [OpenReply, setOpenReply] = useState(false);\n\n  const handleChange = event => {\n    setCommentValue(event.currentTarget.value);\n  };\n\n  const openReply = () => {\n    setOpenReply(!OpenReply);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const variables = {\n      writer: user.userData._id,\n      postId: props.postId,\n      responseTo: props.comment._id,\n      content: CommentValue\n    };\n    axios.post('/api/comment/saveComment', variables).then(response => {\n      if (response.data.success) {\n        setCommentValue(\"\");\n        setOpenReply(!OpenReply);\n        props.refreshFunction(response.data.result);\n      } else {\n        alert('Failed to save Comment');\n      }\n    });\n  };\n\n  const actions = [/*#__PURE__*/React.createElement(LikeDislike, {\n    comment: true,\n    commentId: props.comment._id,\n    userId: localStorage.getItem('userId'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: openReply,\n    key: \"comment-basic-reply-to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Reply to\")];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Comment, {\n    actions: actions,\n    author: props.comment.writer.name,\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: props.comment.writer.image,\n      alt: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, props.comment.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), OpenReply && /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      display: 'flex'\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    style: {\n      width: '100%',\n      borderRadius: '5px'\n    },\n    onChange: handleChange,\n    value: CommentValue,\n    placeholder: \"write some comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: '20%',\n      height: '52px'\n    },\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 18\n    }\n  }, \"Submit\")));\n}\n\nexport default SingleComment;","map":{"version":3,"sources":["/home/eric/Project/Exam/happy-tube/client/src/components/views/DetailVideoPage/Sections/SingleComment.js"],"names":["React","useState","Comment","Avatar","Button","Input","axios","useSelector","LikeDislike","TextArea","SingleComment","props","user","state","CommentValue","setCommentValue","OpenReply","setOpenReply","handleChange","event","currentTarget","value","openReply","onSubmit","preventDefault","variables","writer","userData","_id","postId","responseTo","comment","content","post","then","response","data","success","refreshFunction","result","alert","actions","localStorage","getItem","name","image","display","width","borderRadius","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Comment, Avatar, Button, Input} from 'antd'\nimport axios from 'axios'\nimport { useSelector } from 'react-redux'\nimport LikeDislike from './LikeDislikes'\nconst { TextArea } = Input\n\n\n\nfunction SingleComment(props){\n\n    const user = useSelector(state => state.user)\n\n    const [CommentValue, setCommentValue] = useState(\"\")\n    const [OpenReply, setOpenReply] = useState(false)\n\n    const handleChange = (event) => {\n        setCommentValue(event.currentTarget.value)\n    }\n\n    const openReply = () => {\n        setOpenReply(!OpenReply)\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n\n        const variables = {\n            writer: user.userData._id,\n            postId: props.postId,\n            responseTo: props.comment._id,\n            content: CommentValue\n        }\n\n        axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if(response.data.success){\n                    setCommentValue(\"\")\n                    setOpenReply(!OpenReply)\n                    props.refreshFunction(response.data.result)\n                }else{\n                    alert('Failed to save Comment')\n                }\n            })\n    }\n\n    const actions = [\n        <LikeDislike comment commentId={props.comment._id} userId={localStorage.getItem('userId')} />,\n        <span onClick={openReply} key=\"comment-basic-reply-to\">Reply to</span>\n    ]\n\n    return(\n        <div>\n            <Comment \n                actions={actions}\n                author={props.comment.writer.name}\n                avatar={\n                    <Avatar \n                    src={props.comment.writer.image}\n                    alt\n                    />\n                }\n                content={\n                    <p>\n                        {props.comment.content}\n                    </p>\n                }\n                ></Comment>\n\n            {OpenReply &&\n                 <form style={{ display:'flex'}} onSubmit={onSubmit}>\n                    \n                 <TextArea\n                     style={{ width: '100%', borderRadius: '5px'}}\n                     onChange={handleChange}\n                     value={CommentValue}\n                     placeholder= \"write some comments\"\n                 />\n                 <br />\n                 <Button style={{ width: '20%', height: '52px'}} onClick={onSubmit}>Submit</Button>\n             </form>\n            }    \n                \n        </div>\n    )\n}\n\nexport default SingleComment"]},"metadata":{},"sourceType":"module"}