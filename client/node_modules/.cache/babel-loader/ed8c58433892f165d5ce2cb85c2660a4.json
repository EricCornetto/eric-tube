{"ast":null,"code":"var _jsxFileName = \"/home/eric/Project/Exam/eric-tube/client/src/components/views/DetailVideoPage/Sections/Comments.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\nimport { TextField, Button, Icon } from '@material-ui/core';\n\nfunction Comments(props) {\n  const user = useSelector(state => state.user);\n  const [Comment, setComment] = useState(\"\");\n\n  const handleChange = event => {\n    setComment(event.currentTarget.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const variables = {\n      content: Comment,\n      writer: user.userData._id,\n      postId: props.postId\n    };\n    axios.post('/api/comment/saveComment', variables).then(response => {\n      if (response.data.success) {\n        setComment(\"\");\n        props.refreshFunction(response.data.result);\n      } else {\n        alert('Failed to save Comment');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \" Replies\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), props.CommentLists && props.CommentLists.map((comment, index) => !comment.responseTo && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SingleComment, {\n    comment: comment,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ReplyComment, {\n    CommentLists: props.CommentLists,\n    postId: props.postId,\n    parentCommentId: comment._id,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      display: 'flex'\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: '100%',\n      borderRadius: '5px'\n    },\n    onChange: handleChange,\n    value: Comment,\n    placeholder: \"write some comments\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      width: '20%',\n      height: '52px',\n      marginLeft: '1rem'\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Send\")));\n}\n\nexport default Comments;","map":{"version":3,"sources":["/home/eric/Project/Exam/eric-tube/client/src/components/views/DetailVideoPage/Sections/Comments.js"],"names":["React","useState","axios","useSelector","SingleComment","ReplyComment","TextField","Button","Icon","Comments","props","user","state","Comment","setComment","handleChange","event","currentTarget","value","onSubmit","preventDefault","variables","content","writer","userData","_id","postId","post","then","response","data","success","refreshFunction","result","alert","CommentLists","map","comment","index","responseTo","display","width","borderRadius","height","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,QAAwC,mBAAxC;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEpB,QAAMC,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMc,YAAY,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,UAAU,CAACE,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAV;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAIH,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACI,cAAN;AAEA,UAAMC,SAAS,GAAG;AACdC,MAAAA,OAAO,EAAET,OADK;AAEdU,MAAAA,MAAM,EAAEZ,IAAI,CAACa,QAAL,CAAcC,GAFR;AAGdC,MAAAA,MAAM,EAAEhB,KAAK,CAACgB;AAHA,KAAlB;AAMAxB,IAAAA,KAAK,CAACyB,IAAN,CAAW,0BAAX,EAAuCN,SAAvC,EACKO,IADL,CACUC,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAAyB;AACrBjB,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAJ,QAAAA,KAAK,CAACsB,eAAN,CAAsBH,QAAQ,CAACC,IAAT,CAAcG,MAApC;AACH,OAHD,MAGK;AACDC,QAAAA,KAAK,CAAC,wBAAD,CAAL;AACH;AACJ,KARL;AASH,GAlBD;;AAoBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKKxB,KAAK,CAACyB,YAAN,IAAsBzB,KAAK,CAACyB,YAAN,CAAmBC,GAAnB,CAAuB,CAACC,OAAD,EAASC,KAAT,KAEzC,CAACD,OAAO,CAACE,UAAT,iBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEF,OAAxB;AAAiC,IAAA,MAAM,EAAE3B,KAAK,CAACgB,MAA/C;AAAuD,IAAA,eAAe,EAAEhB,KAAK,CAACsB,eAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAEtB,KAAK,CAACyB,YAAlC;AAAgD,IAAA,MAAM,EAAEzB,KAAK,CAACgB,MAA9D;AAAsE,IAAA,eAAe,EAAEW,OAAO,CAACZ,GAA/F;AAAoG,IAAA,eAAe,EAAEf,KAAK,CAACsB,eAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAHe,CAL3B,eAkBI;AAAM,IAAA,KAAK,EAAE;AAAEQ,MAAAA,OAAO,EAAC;AAAV,KAAb;AAAgC,IAAA,QAAQ,EAAErB,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE;AAAEsB,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,YAAY,EAAE;AAA/B,KADX;AAEI,IAAA,QAAQ,EAAE3B,YAFd;AAGI,IAAA,KAAK,EAAEF,OAHX;AAII,IAAA,WAAW,EAAE,qBAJjB;AAKI,IAAA,OAAO,EAAC,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAYI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAE4B,MAAAA,KAAK,EAAE,KAAT;AAAgBE,MAAAA,MAAM,EAAE,MAAxB;AAAgCC,MAAAA,UAAU,EAAE;AAA5C,KAAf;AAAoE,IAAA,OAAO,EAAC,WAA5E;AAAwF,IAAA,KAAK,EAAC,SAA9F;AAAwG,IAAA,OAAO,EAAEzB,QAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,CAlBJ,CADJ;AAmCH;;AAED,eAAeV,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { useSelector } from 'react-redux'\nimport SingleComment from './SingleComment'\nimport ReplyComment from './ReplyComment'\nimport { TextField, Button, Icon } from '@material-ui/core'\n\n\n\nfunction Comments(props){\n    \n    const user = useSelector(state => state.user)\n    const [Comment, setComment] = useState(\"\")\n\n    const handleChange = (event) => {\n        setComment(event.currentTarget.value)\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n\n        const variables = {\n            content: Comment,\n            writer: user.userData._id,\n            postId: props.postId\n        }\n\n        axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if(response.data.success){\n                    setComment(\"\")\n                    props.refreshFunction(response.data.result)\n                }else{\n                    alert('Failed to save Comment')\n                }\n            })\n    }\n\n    return(\n        <div>\n            <br />\n            <p> Replies</p>\n            <hr />\n\n            {props.CommentLists && props.CommentLists.map((comment,index) => (\n\n                (!comment.responseTo &&\n                    <React.Fragment>\n                    <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\n                    <ReplyComment CommentLists={props.CommentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\n                </React.Fragment>\n                    \n                    )\n\n               \n            ))}\n\n            <form style={{ display:'flex'}} onSubmit={onSubmit}>\n                \n                <TextField\n                    style={{ width: '100%', borderRadius: '5px'}}\n                    onChange={handleChange}\n                    value={Comment}\n                    placeholder= \"write some comments\"\n                    variant='outlined'\n                />\n                <br />\n                \n                <hr />\n                <Button style={{ width: '20%', height: '52px', marginLeft: '1rem'}} variant=\"contained\" color=\"primary\" onClick={onSubmit}>Send</Button>\n            </form> \n        </div>\n    )\n}\n\nexport default Comments"]},"metadata":{},"sourceType":"module"}